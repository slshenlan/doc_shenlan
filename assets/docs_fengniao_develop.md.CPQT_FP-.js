import{_ as a,c as i,o as n,ae as e}from"./chunks/framework.Bu3pZnTe.js";const o=JSON.parse('{"title":"开发说明","description":"","frontmatter":{},"headers":[],"relativePath":"docs/fengniao/develop.md","filePath":"docs/fengniao/develop.md","lastUpdated":1739171098000}'),l={name:"docs/fengniao/develop.md"};function t(p,s,h,r,d,k){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="开发说明" tabindex="-1">开发说明 <a class="header-anchor" href="#开发说明" aria-label="Permalink to &quot;开发说明&quot;">​</a></h1><h2 id="函数插件-fncx-utils" tabindex="-1">函数插件 fncx-utils <a class="header-anchor" href="#函数插件-fncx-utils" aria-label="Permalink to &quot;函数插件 fncx-utils&quot;">​</a></h2><blockquote><p>当前使用 sl-util 后面蜂鸟项目逐步切换到本插件</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { xxx } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fncx-utils&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="移动端对接" tabindex="-1">移动端对接 <a class="header-anchor" href="#移动端对接" aria-label="Permalink to &quot;移动端对接&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 直接调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.hcJsBridge.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;android.setLocalLanguage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, language);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 带回调调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.hcJsBridge.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;android.getMainUrl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 这里写回调方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="套壳对接" tabindex="-1">套壳对接 <a class="header-anchor" href="#套壳对接" aria-label="Permalink to &quot;套壳对接&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 后端函数挂载在 external</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.external.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxxxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,8)]))}const u=a(l,[["render",t]]);export{o as __pageData,u as default};
